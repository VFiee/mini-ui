{"version":3,"file":"index.js","sources":["../../../packages/hooks/useMount/index.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport declare type fn = (...args: any) => void;\n\nconst useMount = (fns: fn | fn[]) => {\n  const fnsRef = useRef(fns);\n  useEffect(() => {\n    const current = fnsRef.current;\n    if (!current) return;\n    if (typeof current === \"function\") {\n      current();\n    } else if (Array.isArray(current)) {\n      current.forEach((fn) => {\n        fn && typeof fn === \"function\" && fn();\n      });\n    }\n  }, []);\n};\n\nexport default useMount;\n"],"names":[],"mappings":";;IAIM,QAAQ,GAAG,UAAC,GAAc;IAC9B,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC3B,SAAS,CAAC;QACR,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,OAAO;YAAE,OAAO;QACrB,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YACjC,OAAO,EAAE,CAAC;SACX;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,OAAO,CAAC,OAAO,CAAC,UAAC,EAAE;gBACjB,EAAE,IAAI,OAAO,EAAE,KAAK,UAAU,IAAI,EAAE,EAAE,CAAC;aACxC,CAAC,CAAC;SACJ;KACF,EAAE,EAAE,CAAC,CAAC;AACT;;;;"}