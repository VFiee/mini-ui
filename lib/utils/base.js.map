{"version":3,"file":"base.js","sources":["../../packages/utils/base.ts"],"sourcesContent":["import { BaseObject } from \"types\";\n\nexport const objectProto = Object.prototype;\n\nexport const hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * @param {any} target 检测的值\n * @returns {boolean} 返回布尔值,`true`表示是数组,`false`表示不是数组\n *\n */\nexport const isArray = Array.isArray;\n\n/**\n * 检测当前值是否为buffer类型\n * @params {any} value 检测的值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isBuffer = Buffer ? Buffer.isBuffer : (_value: any) => false;\n\n/**\n * 获取任意值的字符串类型\n * @param {any} value 转换为字符串的数据\n * @returns {string} 返回 Object.prototype.toString.call(value) 的值\n *\n */\nexport const toString = (value: any): string =>\n  objectProto.toString.call(value);\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回 value的数据类型,如 string object function null undefined number ....\n *\n */\nexport const getTypeof = (value: any): string => {\n  return toString(value).slice(8, -1);\n};\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回boolean\n *\n */\nexport const isNull = (value: any): boolean => value === null;\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回boolean\n *\n */\nexport const isUndefined = (value: any): boolean =>\n  typeof value === \"undefined\";\n\n/**\n * 判断当前值是否为对象\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isObject = (value: any): boolean => {\n  return value != null && typeof value === \"object\";\n};\n\n/**\n * 检测当前值是否为Map类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isMap = (value: any): boolean => getTypeof(value) === \"Map\";\n\n/**\n * 检测当前值是否为WeakMap类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isWeakMap = (value: any): boolean =>\n  getTypeof(value) === \"WeakMap\";\n\n/**\n * 检测当前值是否为Set类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isSet = (value: any): boolean => getTypeof(value) === \"Set\";\n\n/**\n * 检测当前值是否为WeakSet类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isWeakSet = (value: any): boolean =>\n  getTypeof(value) === \"WeakSet\";\n\n/**\n * 检测当前值是否为Function类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isFunction = (value: any): boolean =>\n  getTypeof(value) === \"Function\";\n\n/**\n * 检测当前值是否为GeneratorFunction类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isGeneratorFunction = (value: any): boolean =>\n  getTypeof(value) === \"GeneratorFunction\";\n\n/**\n * 检测当前值是否为Promise类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isPromise = (value: any): boolean =>\n  getTypeof(value) === \"Promise\";\n\n/**\n * 检测当前值是否为RegExp类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isRegExp = (value: any): boolean => getTypeof(value) === \"RegExp\";\n\n/**\n * 检测当前值是否为Boolean类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isBoolean = (value: any): boolean =>\n  typeof value === \"boolean\" || getTypeof(value) === \"Boolean\";\n\n/**\n * 检测当前值是否为Arguments类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isArguments = (value: any): boolean => {\n  return (\n    isObject(value) &&\n    hasOwnProperty.call(value, \"callee\") &&\n    objectProto.propertyIsEnumerable(\"callee\") &&\n    isFunction(value.callee)\n  );\n};\n\n/**\n * 检测当前值是否为Symbol类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\n\nexport const isSymbol = (value: any): boolean => getTypeof(value) === \"Symbol\";\n\n/**\n * 检测当前值是否为空\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isEmpty = (value: any): boolean => {\n  if (value == null) return true;\n  if (\n    typeof value === \"string\" ||\n    isArray(value) ||\n    isBuffer(value) ||\n    isArguments(value)\n  ) {\n    return !value.length;\n  }\n  if (isSet(value) || isMap(value)) {\n    return !value.size;\n  }\n  for (const key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * 过滤掉目标对象中的被Boolean转为false的值\n * @param { [] | object } value\n * @param {(arg: any) => boolean} fn 每次过滤执行的函数\n * @returns { [] | object } 返回过滤后的值\n */\n\nexport function compact(\n  value: [] | object,\n  fn?: (arg: any) => boolean,\n  deep: boolean = false\n): [] | object {\n  const predicate = fn || Boolean;\n  if (isArray(value)) {\n    return value.filter(predicate);\n  }\n  if (!isObject(value)) return value;\n  let keys = Object.keys(value);\n  if (keys.length <= 0) return value;\n  let res = {};\n  for (let i = 0, len = keys.length; i < len; i++) {\n    let item = value[keys[i]];\n    if (deep && (isArray(item) || isObject(item))) {\n      res[keys[i]] = compact(item, predicate);\n    } else if (!predicate(item)) {\n      res[keys[i]] = item;\n    }\n  }\n  return res;\n}\n\n/**\n *\n * 遍历对象并返回对象可枚举属性组成的数组\n * @param {object} value 遍历对象\n * @returns {string[]} 返回对象的自身可枚举属性组成的数组\n *\n */\n\nexport const keys = Object.keys;\n\n/**\n * 遍历对象并返回对象可枚举属性值组成的数组\n * @param {object} value 遍历对象\n * @returns {any[]} 返回对象的自身可枚举属性值组成的数组\n *\n */\nexport const values = Object.values;\n\n/**\n *\n * @param value 检索的对象\n * @param callback 循环时每个元素的回调\n * @param thisArg 回调函数作用域\n */\n\nexport type ForEachCallback<T = BaseObject | any[]> = (\n  value: any,\n  key?: number,\n  target?: T\n) => any;\nexport const forEach = (\n  value: BaseObject | any[],\n  callback: ForEachCallback,\n  thisArg?: any\n) => {\n  if (isArray(value)) {\n    return value.forEach(callback, thisArg);\n  } else if (isObject(value) && keys(value).length > 0) {\n    return foreachObject(value, callback, thisArg);\n  }\n};\n\n/**\n * 遍历对象并执行回调\n * @param {BaseObject} object 遍历的对象\n * @param {ForEachCallback} callback 遍历执行的回调函数\n * @param {any} thisArg 回调函数作用域\n */\nexport const foreachObject = (\n  object: BaseObject,\n  callback: ForEachCallback,\n  thisArg: any\n) => {\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      callback.call(thisArg, object[key], key, object);\n    }\n  }\n};\n\n/**\n * 创建一个从object中选取属性的对象\n * @param {object} object 来源对象\n * @param {string | string[] | predicate } props 需要获取的属性或自定义是否获取,\n * 返回true则获取,false则忽略\n * @returns {object} 返回新对象\n *\n */\n\ndeclare type predicate = (value: string, key: string | number) => boolean;\nexport function pick(object: BaseObject, props: string | string[] | predicate) {\n  let res: BaseObject = {};\n  if (isEmpty(object)) return res;\n  if (typeof props === \"string\") {\n    return hasOwnProperty.call(object, props)\n      ? { [props]: object[props] }\n      : res;\n  } else if (isArray(props) && props.length > 0) {\n    forEach(props, (value) => {\n      if (hasOwnProperty.call(object, value)) {\n        res[value] = object[value];\n      }\n    });\n  } else if (isFunction(props)) {\n    forEach(object, (value, key) => {\n      if ((props as Function)(value, key)) {\n        res[value] = object[value];\n      }\n    });\n  }\n  return res;\n}\n\ndeclare type MergeProps = {\n  object: BaseObject;\n  source: BaseObject;\n};\nexport function merge(\n  { object, source }: MergeProps,\n  isDeep: boolean = false\n): BaseObject {\n  if (!isDeep) {\n    return Object.assign({}, object, source);\n  }\n  let res = {};\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      if (hasOwnProperty.call(source, key)) {\n        if (isObject(object[key]) && isObject(source[key])) {\n          res[key] = merge(\n            { object: object[key], source: source[key] },\n            isDeep\n          );\n        }\n        res[key] = source[key];\n      }\n      res[key] = object[key];\n    }\n  }\n  return res;\n}\n"],"names":[],"mappings":"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"}