{"version":3,"file":"index.js","sources":["../../packages/utils/system/route.ts","../../packages/utils/system/setting.ts","../../packages/utils/system/index.ts","../../packages/utils/base.ts","../../packages/utils/style/index.ts","../../packages/utils/index.ts"],"sourcesContent":["import {\n  Page,\n  getCurrentPages,\n  switchTab as _switchTab,\n  navigateTo as _navigateTo,\n  redirectTo as _redirectTo,\n  navigateBack as _navigateBack,\n  reLaunch as _reLaunch,\n} from \"@tarojs/taro\";\n\nconst AppConfig = {\n  pages: [],\n};\n\nconst promiseify = (fn: Function): any => (args = {}): Promise<any> =>\n  new Promise((resolve, reject) => {\n    fn({\n      ...args,\n      fail: reject,\n      success: resolve,\n    });\n  });\n\n/***************************** Page *************************************/\n\ndeclare type CurrentPage = {\n  pages: Page[];\n  current: Page;\n  isFirst: boolean;\n  isTabBar: boolean;\n  isRootPage: boolean;\n};\n/**\n *\n * 获取当前小程序页面信息\n * @returns {CurrentPage} 当前页面信息\n * pages 路由栈\n * current 当前路由页面\n * isFirst 路由栈长度为1\n * isRootPage 当前路由栈是否小程序tabBar页面\n *\n */\nexport const getCurrPages = (): CurrentPage => {\n  const pages = getCurrentPages();\n  const current = pages[pages.length - 1];\n  return {\n    pages,\n    current,\n    isTabBar: isTabBar(current),\n    isFirst: pages.length === 1,\n    isRootPage: isRootPage(current),\n  };\n};\n\n/**\n *\n * 判断页面是否为小程序tabBar页面\n *\n * @param {Page} page Page对象\n * @returns {boolean} Page是否为tabBar页面\n */\nexport const isTabBar = (page: Page): boolean => {\n  // @ts-ignore\n  const tabbarPages = AppConfig?.tabbar?.list ?? [];\n  return tabbarPages.some((_page) => _page?.pagePath === page.route);\n};\n\n/**\n *\n * @param {Page} page Page对象\n * @returns {boolean} Page是否为首页\n *\n */\nexport const isRootPage = (page: Page): boolean =>\n  AppConfig?.pages[0] === page.route;\n\n/****************************** Router ***********************************/\nconst promiseNavigateTo = promiseify(_navigateTo);\nconst promiseRedirectTo = promiseify(_redirectTo);\nconst promiseNavigateBack = promiseify(_navigateBack);\nconst promiseSwitchTab = promiseify(_switchTab);\nconst promiseRelaunch = promiseify(_reLaunch);\n\n/**\n * 跳转到指定小程序页面,如果路由栈大于9个,将关闭当前页面,并跳转到目的页面,返回Promise\n * @param {string} url 跳转页面路径\n * @param {General.IAnyObject} events 可选,页面间通信接口，用于监听被打开页面发送到当前页面的数据\n * @returns {Promise<any>} 返回Promise,成功then,失败catch\n *\n */\ndeclare type RouterOption = {\n  url: string;\n  events?: {\n    [key: string]: Function;\n  };\n};\nexport const navigateTo = (option: RouterOption): Promise<any> => {\n  const { pages } = getCurrPages();\n  return (pages.length >= 10 ? promiseRedirectTo : promiseNavigateTo)(option);\n};\n\n/**\n *\n * 关闭当前页面并跳转到目标页面,返回Promise\n * @param {string} url 跳转页面路径\n * @returns {Promise<any>} 返回Promise对象\n *\n */\nexport const redirectTo = (url: string): Promise<any> =>\n  promiseRedirectTo({ url });\n\n/**\n * 关闭当前页面,返回上一页面或多级页面\n * @param {number} delta 返回页面栈层数,默认1\n * @returns {Promise<any>} 返回Promise\n */\n\nexport const navigateBack = (delta: number = 1): Promise<any> =>\n  promiseNavigateBack({ delta });\n\n/**\n * 如果是tabBar页面将关闭所有非tabBar页面,否则关闭当前页面,跳转到目标页面\n * @param {string} url 跳转页面路径\n * @returns {Promise<any>} 返回Promise\n *\n */\nexport const switchTab = (url: string): Promise<any> => {\n  const _isTabBar = isRootPage({ route: url });\n  if (!_isTabBar) {\n    return redirectTo(url);\n  }\n  return promiseSwitchTab({ url });\n};\n\n/**\n * 关闭所有页面,打开对应页面\n * @param {string} url 打开页面地址\n * @returns {Promise<any>} 返回Promise\n *\n */\nexport const reLaunch = (url: string): Promise<any> => promiseRelaunch({ url });\n\n/**\n * 关闭所有页面,打开首页\n * @returns {Promise<any>} 返回Promise\n */\nexport const goToHome = (): Promise<any> => {\n  return reLaunch(`/${AppConfig.pages[0]}`);\n};\n","import { getSetting, authorize, showModal, openSetting } from \"@tarojs/taro\";\nimport { AuthScope } from \"types\";\n\n/**\n *\n * @param {AuthScope} scope 需要获取的授权项\n * @param {string} message 授权曾拒绝,提示打开设置页面的提示信息\n * @returns {Promise<any>} 返回 Promise<any>\n *\n */\n\nconst SCOPE_MESSAGE = {\n  userinfo: \"用户信息\",\n  userLocation: \"地理位置\",\n  userLocationBackground: \"后台定位\",\n  address: \"通讯地址\",\n  invoiceTitle: \"发票抬头\",\n  invoice: \"获取发票\",\n  werun: \"微信运动步数\",\n  record: \"录音功能\",\n  writePhotosAlbum: \"保存到相册\",\n  camera: \"摄像头\",\n};\n\nexport const ensureAuthScope = async (\n  scope: AuthScope,\n  message?: string\n): Promise<any> => {\n  const { authSetting } = await getSetting();\n  if (scope && authSetting[`scope.${scope}`] === true) {\n    return authSetting;\n  } else if (authSetting[`scope.${scope}`] === void 0) {\n    return await authorize({\n      scope: `scope.${scope}`,\n    });\n  }\n  return await showModal({\n    title: \"权限申请\",\n    content:\n      message ||\n      `检测到小程序已关闭${SCOPE_MESSAGE[scope] || \"相关\"}权限,是否前往打开?`,\n    confirmText: \"打开\",\n  })\n    .then((res) => {\n      if (res.confirm) {\n        return openSetting();\n      } else {\n        throw new Error(\"未授权,用户已取消!\");\n      }\n    })\n    .then((res) => {\n      const { authSetting: _auth } = res;\n      if (_auth && _auth[`scope.${scope}`]) {\n        return _auth;\n      } else {\n        throw new Error(\"用户未授权\");\n      }\n    });\n};\n","import {\n  getSystemInfoSync as _getSystemInfoSync,\n  getMenuButtonBoundingClientRect as _getMenuRect,\n} from \"@tarojs/taro\";\n\nexport * from \"./route\";\n\nexport * from \"./setting\";\n\n/**\n * 获取系统信息\n * @returns {Taro.getSystemInfoSync.Result} 当前设备系统信息\n */\nlet systemInfo: Taro.getSystemInfoSync.Result;\nexport const getSystemInfoSync = () => {\n  if (systemInfo == null) {\n    systemInfo = _getSystemInfoSync();\n  }\n  return systemInfo;\n};\n\n/**\n *\n * 获取菜单按钮的布局位置信息\n * @returns {Taro.getMenuButtonBoundingClientRect.Rect} 菜单按钮的布局位置信息\n */\nlet menuButtonRect: Taro.getMenuButtonBoundingClientRect.Rect;\nexport const getMenuButtonBoundingClientRect = () => {\n  if (menuButtonRect == null) {\n    menuButtonRect = _getMenuRect();\n  }\n  return menuButtonRect;\n};\n","import { BaseObject } from \"types\";\n\nexport const objectProto = Object.prototype;\n\nexport const hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * @param {any} target 检测的值\n * @returns {boolean} 返回布尔值,`true`表示是数组,`false`表示不是数组\n *\n */\nexport const isArray = Array.isArray;\n\n/**\n * 检测当前值是否为buffer类型\n * @params {any} value 检测的值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isBuffer = Buffer ? Buffer.isBuffer : (_value: any) => false;\n\n/**\n * 获取任意值的字符串类型\n * @param {any} value 转换为字符串的数据\n * @returns {string} 返回 Object.prototype.toString.call(value) 的值\n *\n */\nexport const toString = (value: any): string =>\n  objectProto.toString.call(value);\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回 value的数据类型,如 string object function null undefined number ....\n *\n */\nexport const getTypeof = (value: any): string => {\n  return toString(value).slice(8, -1);\n};\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回boolean\n *\n */\nexport const isNull = (value: any): boolean => value === null;\n\n/**\n *\n * @param {any} value 任意合法值\n * @returns {string} 返回boolean\n *\n */\nexport const isUndefined = (value: any): boolean =>\n  typeof value === \"undefined\";\n\n/**\n * 判断当前值是否为对象\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isObject = (value: any): boolean => {\n  return value != null && typeof value === \"object\";\n};\n\n/**\n * 检测当前值是否为Map类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isMap = (value: any): boolean => getTypeof(value) === \"Map\";\n\n/**\n * 检测当前值是否为WeakMap类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isWeakMap = (value: any): boolean =>\n  getTypeof(value) === \"WeakMap\";\n\n/**\n * 检测当前值是否为Set类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isSet = (value: any): boolean => getTypeof(value) === \"Set\";\n\n/**\n * 检测当前值是否为WeakSet类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isWeakSet = (value: any): boolean =>\n  getTypeof(value) === \"WeakSet\";\n\n/**\n * 检测当前值是否为Function类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isFunction = (value: any): boolean =>\n  getTypeof(value) === \"Function\";\n\n/**\n * 检测当前值是否为GeneratorFunction类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isGeneratorFunction = (value: any): boolean =>\n  getTypeof(value) === \"GeneratorFunction\";\n\n/**\n * 检测当前值是否为Promise类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isPromise = (value: any): boolean =>\n  getTypeof(value) === \"Promise\";\n\n/**\n * 检测当前值是否为RegExp类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isRegExp = (value: any): boolean => getTypeof(value) === \"RegExp\";\n\n/**\n * 检测当前值是否为Boolean类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isBoolean = (value: any): boolean =>\n  typeof value === \"boolean\" || getTypeof(value) === \"Boolean\";\n\n/**\n * 检测当前值是否为Arguments类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\nexport const isArguments = (value: any): boolean => {\n  return (\n    isObject(value) &&\n    hasOwnProperty.call(value, \"callee\") &&\n    objectProto.propertyIsEnumerable(\"callee\") &&\n    isFunction(value.callee)\n  );\n};\n\n/**\n * 检测当前值是否为Symbol类型\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n */\n\nexport const isSymbol = (value: any): boolean => getTypeof(value) === \"Symbol\";\n\n/**\n * 检测当前值是否为空\n * @param {any} value 任意合法值\n * @returns {boolean} 返回boolean\n *\n */\nexport const isEmpty = (value: any): boolean => {\n  if (value == null) return true;\n  if (\n    typeof value === \"string\" ||\n    isArray(value) ||\n    isBuffer(value) ||\n    isArguments(value)\n  ) {\n    return !value.length;\n  }\n  if (isSet(value) || isMap(value)) {\n    return !value.size;\n  }\n  for (const key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * 过滤掉目标对象中的被Boolean转为false的值\n * @param { [] | object } value\n * @param {(arg: any) => boolean} fn 每次过滤执行的函数\n * @returns { [] | object } 返回过滤后的值\n */\n\nexport function compact(\n  value: [] | object,\n  fn?: (arg: any) => boolean,\n  deep: boolean = false\n): [] | object {\n  const predicate = fn || Boolean;\n  if (isArray(value)) {\n    return value.filter(predicate);\n  }\n  if (!isObject(value)) return value;\n  let keys = Object.keys(value);\n  if (keys.length <= 0) return value;\n  let res = {};\n  for (let i = 0, len = keys.length; i < len; i++) {\n    let item = value[keys[i]];\n    if (deep && (isArray(item) || isObject(item))) {\n      res[keys[i]] = compact(item, predicate);\n    } else if (!predicate(item)) {\n      res[keys[i]] = item;\n    }\n  }\n  return res;\n}\n\n/**\n *\n * 遍历对象并返回对象可枚举属性组成的数组\n * @param {object} value 遍历对象\n * @returns {string[]} 返回对象的自身可枚举属性组成的数组\n *\n */\n\nexport const keys = Object.keys;\n\n/**\n * 遍历对象并返回对象可枚举属性值组成的数组\n * @param {object} value 遍历对象\n * @returns {any[]} 返回对象的自身可枚举属性值组成的数组\n *\n */\nexport const values = Object.values;\n\n/**\n *\n * @param value 检索的对象\n * @param callback 循环时每个元素的回调\n * @param thisArg 回调函数作用域\n */\n\nexport type ForEachCallback<T = BaseObject | any[]> = (\n  value: any,\n  key?: number,\n  target?: T\n) => any;\nexport const forEach = (\n  value: BaseObject | any[],\n  callback: ForEachCallback,\n  thisArg?: any\n) => {\n  if (isArray(value)) {\n    return value.forEach(callback, thisArg);\n  } else if (isObject(value) && keys(value).length > 0) {\n    return foreachObject(value, callback, thisArg);\n  }\n};\n\n/**\n * 遍历对象并执行回调\n * @param {BaseObject} object 遍历的对象\n * @param {ForEachCallback} callback 遍历执行的回调函数\n * @param {any} thisArg 回调函数作用域\n */\nexport const foreachObject = (\n  object: BaseObject,\n  callback: ForEachCallback,\n  thisArg: any\n) => {\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      callback.call(thisArg, object[key], key, object);\n    }\n  }\n};\n\n/**\n * 创建一个从object中选取属性的对象\n * @param {object} object 来源对象\n * @param {string | string[] | predicate } props 需要获取的属性或自定义是否获取,\n * 返回true则获取,false则忽略\n * @returns {object} 返回新对象\n *\n */\n\ndeclare type predicate = (value: string, key: string | number) => boolean;\nexport function pick(object: BaseObject, props: string | string[] | predicate) {\n  let res: BaseObject = {};\n  if (isEmpty(object)) return res;\n  if (typeof props === \"string\") {\n    return hasOwnProperty.call(object, props)\n      ? { [props]: object[props] }\n      : res;\n  } else if (isArray(props) && props.length > 0) {\n    forEach(props, (value) => {\n      if (hasOwnProperty.call(object, value)) {\n        res[value] = object[value];\n      }\n    });\n  } else if (isFunction(props)) {\n    forEach(object, (value, key) => {\n      if ((props as Function)(value, key)) {\n        res[value] = object[value];\n      }\n    });\n  }\n  return res;\n}\n\ndeclare type MergeProps = {\n  object: BaseObject;\n  source: BaseObject;\n};\nexport function merge(\n  { object, source }: MergeProps,\n  isDeep: boolean = false\n): BaseObject {\n  if (!isDeep) {\n    return Object.assign({}, object, source);\n  }\n  let res = {};\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      if (hasOwnProperty.call(source, key)) {\n        if (isObject(object[key]) && isObject(source[key])) {\n          res[key] = merge(\n            { object: object[key], source: source[key] },\n            isDeep\n          );\n        }\n        res[key] = source[key];\n      }\n      res[key] = object[key];\n    }\n  }\n  return res;\n}\n","import kebabCase from \"lodash.kebabcase\";\n\ndeclare type Style = string | React.CSSProperties | undefined;\n\nfunction objectToString(style: Style): string {\n  if (style == null) {\n    return \"\";\n  } else if (typeof style === \"string\") {\n    return style;\n  }\n  let res: string = \"\";\n  for (const [key, value] of Object.entries(style)) {\n    res += `${kebabCase(key)}: ${value};`;\n  }\n  return res;\n}\n\nexport function mergeStyle(baseStyles: Style, mergeStyles?: Style): string {\n  baseStyles = objectToString(baseStyles);\n  mergeStyles = objectToString(mergeStyles);\n  return baseStyles + mergeStyles;\n}\n","import qs from \"qs\";\nimport get from \"lodash.get\";\nimport kebabcase from \"lodash.kebabcase\";\nimport { createSelectorQuery } from \"@tarojs/taro\";\nimport { BaseObject, BaseMap } from \"types\";\nimport { getSystemInfoSync } from \"./system\";\nimport { isObject, isFunction, isEmpty } from \"./base\";\n\nexport * from \"./base\";\n\nexport * from \"./system\";\n\nexport * from \"./style\";\n\nexport { get, kebabcase };\n\n/**\n *\n * @param {string} url 获取参数的URL\n * @param {BaseObject} params 追加的参数对象\n * @returns {RouterData} 返回一个包含[无参数URL字符串]和[拼接参数字符串]以及[参数对象]的对象\n */\ndeclare type RouterData = {\n  url: string;\n  query: string;\n  params: BaseObject;\n};\nexport const getRouterParams = (\n  url: string,\n  params: BaseObject = {}\n): RouterData => {\n  if (typeof url !== \"string\" || url == \"\") return { url, params, query: \"\" };\n  const [baseUrl, query] = decodeURIComponent(url).split(\"?\");\n  const mergeParams = {\n    ...qs.parse(query),\n    ...params,\n  };\n  return {\n    url: baseUrl,\n    params: mergeParams,\n    query: qs.stringify(mergeParams),\n  };\n};\n\n/**\n *\n * @param {BaseObject} params 小程序 this.$router.params对象\n * @returns {BaseObject} 解析小程序路由参数,二维码扫描参数q,小程序码扫码参数scene\n * 其中 scene 字符串传参格式应为 key=value&key2=value2 格式\n *\n */\nexport const getMiniParams = (params: BaseObject): BaseObject => {\n  if (isEmpty(params)) return {};\n  const { q = \"\", scene = \"\", ...restParams } = params;\n  return {\n    ...restParams,\n    ...qs.parse(decodeURIComponent(q)),\n    ...qs.parse(decodeURIComponent(scene)),\n  };\n};\n\n/**\n * 将对象转换成Map\n * @param {object} obj 转换成Map的原始对象\n * @param {BaseMap} initMap 初始Map对象,如果存在将在初始Map对象上增加属性,属性存在则覆盖\n * @returns {BaseMap} 返回转换后的Map对象\n *\n */\nexport const objectToMap = (obj: BaseObject, initMap?: BaseMap): BaseMap => {\n  initMap = initMap || new Map();\n  if (!isObject(obj)) return initMap;\n  const keys = Object.keys(obj);\n  if (keys.length === 0) return initMap;\n  for (let i = 0, len = keys.length; i < len; i++) {\n    initMap.set(keys[i], obj[keys[i]]);\n  }\n  return initMap;\n};\n\n/**\n * 将Map转换成对象\n * @param {BaseMap} map 转换成对象的Map\n * @param {object} initObj 初始对象,如果存在将在初始对象上增加属性,属性存在则覆盖\n * @returns {BaseMap} 返回转换后的Map对象\n *\n */\nexport const mapToObject = (map: BaseMap, initObj?: BaseObject): BaseObject => {\n  let res: BaseObject = initObj || {};\n  if (!(map instanceof Map) || map.size === 0) return res;\n  map.forEach((value, key) => {\n    res[key] = value;\n  });\n  return res;\n};\n\n/**\n * 下一次页面渲染前执行的方法\n * @param {Function} fn 执行的方法\n *\n */\nexport const nextTick = (fn: Function) => {\n  setTimeout(() => {\n    fn();\n  }, 1000 / 30);\n};\n\n/**\n * 小程序中模拟requestAnimationFrame\n * @param {Function} cb 回调函数\n *\n */\nexport function requestAnimationFrame(cb: Function) {\n  const _systemInfo = getSystemInfoSync();\n  if (_systemInfo.platform === \"devtools\") {\n    return nextTick(cb);\n  }\n  return createSelectorQuery()\n    .selectViewport()\n    .boundingClientRect()\n    .exec(() => {\n      cb();\n    });\n}\n\n/**\n * 判断元素是否为组件类型(函数组件或类组件)\n * @param {React.ComponentType} Component 检测的组件\n * @returns {boolean} 返回boolean\n */\n\nexport function isReactComponentType(\n  Component: React.ComponentType | undefined\n): boolean {\n  if (Component == null) return false;\n  return isFunction(Component) || !!Component?.prototype.isReactComponent;\n}\n"],"names":["_navigateTo","_redirectTo","_navigateBack","_switchTab","_reLaunch","_getSystemInfoSync","_getMenuRect"],"mappings":"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"}